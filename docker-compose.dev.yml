services:
  catalog-cron:
    image: alpine:latest
    container_name: gutendex_catalog_cron
    volumes:
      - .:/app:ro
      - /var/run/docker.sock:/var/run/docker.sock # if you need Docker socket
    env_file:
      - .env
    entrypoint: ["sh", "-c"]
    command: |
      apk add --no-cache curl bash py3-cronolog busybox-suid && \
      # create a cron file
      echo "0 2 * * * cd /app && docker compose run --rm web python manage.py updatecatalog >> /app/logs/updatecatalog.log 2>&1" > /etc/crontabs/root && \
      crond -f -L /app/logs/cron.log

  db:
    image: postgres:13-alpine
    container_name: gutendex_db
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-gutendex}
      POSTGRES_USER: ${DATABASE_USER:-gutendex}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gutendex_web
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
    depends_on:
      - db
    ports:
      - "${WEB_PORT:-8000}:8000"
    volumes:
      - static_volume:/var/www/gutendex/static
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]

volumes:
  postgres_data:
  static_volume:

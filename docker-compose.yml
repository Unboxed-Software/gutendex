services:
  db:
    image: postgres:13-alpine
    container_name: gutendex_db
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-gutendex}
      POSTGRES_USER: ${DATABASE_USER:-gutendex}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DATABASE_USER:-gutendex} -d ${DATABASE_NAME:-gutendex}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gutendex_web
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${WEB_PORT:-8000}:8000"
    volumes:
      - static_volume:/var/www/gutendex/static
    command: ["gunicorn", "gutendex.wsgi:application", "--bind", "0.0.0.0:8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  postgres_data:
  static_volume:
